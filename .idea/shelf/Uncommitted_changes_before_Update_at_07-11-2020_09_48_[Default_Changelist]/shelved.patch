Index: app/src/main/java/com/example/bucketlist/adapters/RecyclerAdapterComment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.bucketlist.adapters;\r\n\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.graphics.Color;\r\nimport android.text.Editable;\r\nimport android.text.TextWatcher;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.widget.PopupMenu;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.core.graphics.drawable.DrawableCompat;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.example.bucketlist.R;\r\nimport com.example.bucketlist.model.CommentModel;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.EventListener;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.FirebaseFirestoreException;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\n\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\nimport java.util.TimeZone;\r\n\r\nimport de.hdodenhof.circleimageview.CircleImageView;\r\n\r\npublic class RecyclerAdapterComment extends RecyclerView.Adapter<RecyclerAdapterComment.CommentViewHolder> implements PopupMenu.OnMenuItemClickListener, View.OnClickListener {\r\n    private static final String TAG = \"Likes\";\r\n    Context context;\r\n    List<CommentModel> commentModelList;\r\n    FirebaseFirestore firestore;\r\n    String  postid,uid,cid;\r\n    int totalComments;\r\n\r\n\r\n    public RecyclerAdapterComment(Context context, List<CommentModel> commentModelList, String postid) {\r\n        this.context = context;\r\n        this.commentModelList = commentModelList;\r\n        firestore = FirebaseFirestore.getInstance();\r\n        this.postid = postid;\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public CommentViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        View view = LayoutInflater.from(context).inflate(R.layout.comment_item, parent, false);\r\n        return new CommentViewHolder(view);\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return commentModelList.size();\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull final CommentViewHolder holder, final int position) {\r\n\r\n\r\n\r\n        holder.moreOptions.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                uid=commentModelList.get(position).getUid();\r\n                cid=commentModelList.get(position).getCommentId();\r\n                Log.d(\"abc\",uid+cid);\r\n                showCommentMenu(v);\r\n\r\n            }\r\n        });\r\n\r\n        firestore.collection(\"Posts\").document(postid).addSnapshotListener(new EventListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onEvent(@Nullable DocumentSnapshot value, @Nullable FirebaseFirestoreException error) {\r\n                totalComments=value.getLong(\"total comments\").intValue();\r\n            }\r\n        });\r\n\r\n        holder.comment.setText(commentModelList.get(position).getComment());\r\n        holder.noOfLikes.setText(Integer.toString(commentModelList.get(position).getLikes()));\r\n        FirebaseFirestore.getInstance().collection(\"Users\")\r\n                .document(commentModelList.get(position).getUid()).addSnapshotListener(new EventListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onEvent(@Nullable DocumentSnapshot value, @Nullable FirebaseFirestoreException error) {\r\n                if (error != null) {\r\n                    Log.e(\"error\", error.getMessage());\r\n                } else {\r\n                    holder.username.setText(value.getString(\"Display Name\"));\r\n                    Glide.with(context).load(value.getString(\"Image Uri\")).into(holder.userimage);\r\n                }\r\n            }\r\n        });\r\n\r\n        /**\r\n         * check if likes exists or not for the user\r\n         */\r\n        firestore.collection(\"Posts\").document(postid)\r\n                .collection(\"Comments\").document(commentModelList.get(position).getCommentId())\r\n                .collection(\"likedBy\")\r\n                .document(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                .get()\r\n                .addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<DocumentSnapshot> task) {\r\n\r\n                        if (task.isSuccessful()) {\r\n                            DocumentSnapshot snapshot = task.getResult();\r\n                            if (snapshot.exists()) {\r\n                                holder.isLiked = true;\r\n                                Log.d(TAG, \"onComplete: \" + holder.isLiked);\r\n                                holder.likesText.setTextColor(Color.parseColor(\"#FF0000\"));\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n\r\n\r\n\r\n\r\n\r\n        Calendar calendar = Calendar.getInstance();\r\n        calendar.setTime(new Date());\r\n        SimpleDateFormat sdf = new SimpleDateFormat(\"hh:mm\");\r\n\r\n        sdf.setTimeZone(TimeZone.getDefault());\r\n\r\n        String dateAsText = sdf.format(new Date(commentModelList.get(position).getTimeStamp()).getTime());\r\n\r\n        Log.d(\"timezone123\", TimeZone.getDefault().toString());\r\n        holder.timecreated.setText(dateAsText);\r\n//        holder.likesText.setOnClickListener(this);\r\n        Log.d(\"datecreated\", dateAsText);\r\n\r\n        holder.likesText.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                Map map1 = new HashMap();\r\n                map1.put(\"ref\", firestore.collection(\"Users\").document(FirebaseAuth.getInstance().getCurrentUser().getUid()));\r\n                DocumentReference reference = firestore.collection(\"Posts\").document(postid)\r\n                        .collection(\"Comments\").document(commentModelList.get(position).getCommentId())\r\n                        .collection(\"likedBy\")\r\n                        .document(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n\r\n\r\n                DocumentReference documentReference = firestore.collection(\"Posts\").document(postid)\r\n                        .collection(\"Comments\").document(commentModelList.get(position).getCommentId());\r\n\r\n                if (holder.isLiked == false) {\r\n\r\n                    reference.set(map1);\r\n                    documentReference\r\n                            .update(\"total likes\", commentModelList.get(position).getLikes() + 1)\r\n                            .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                @Override\r\n                                public void onSuccess(Void aVoid) {\r\n                                    holder.isLiked = true;\r\n                                }\r\n                            });\r\n                } else {\r\n                    reference.delete();\r\n                    documentReference\r\n                            .update(\"total likes\", commentModelList.get(position).getLikes() - 1)\r\n                            .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                @Override\r\n                                public void onSuccess(Void aVoid) {\r\n                                    holder.isLiked = false;\r\n                                    holder.likesText.setTextColor(Color.parseColor(\"#000000\"));\r\n                                }\r\n                            });\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n//    private void deleteComment() {\r\n//        AlertDialog.Builder builder = new AlertDialog.Builder(context);\r\n//        builder.setTitle(\"Delete\");\r\n//        builder.setMessage(\"Are you sure  to delete this comment?\");\r\n//        builder.setPositiveButton(\"Delete\", new DialogInterface.OnClickListener() {\r\n//            @Override\r\n//            public void onClick(DialogInterface dialog, int which) {\r\n//\r\n//\r\n//\r\n//            }\r\n//        })\r\n//        .setNegativeButton(\"Cancel\", new DialogInterface.OnClickListener() {\r\n//            @Override\r\n//            public void onClick(DialogInterface dialog, int which) {\r\n//                dialog.dismiss();\r\n//\r\n//            }\r\n//        });\r\n//        builder.create();\r\n//        builder.show();\r\n//\r\n//    }\r\n\r\n    @Override\r\n    public void onClick(View v) {\r\n    }\r\n    private void showCommentMenu(View view) {\r\n        PopupMenu popupMenu = new PopupMenu(view.getContext(), view);\r\n        if(FirebaseAuth.getInstance().getCurrentUser().getUid().equals(uid)) {\r\n            popupMenu.inflate(R.menu.menu_comment);\r\n        }else{\r\n            popupMenu.inflate(R.menu.menu_comment2);\r\n        }\r\n        popupMenu.setOnMenuItemClickListener(this);\r\n        popupMenu.show();\r\n    }\r\n\r\n    @Override\r\n    public boolean onMenuItemClick(MenuItem item) {\r\n\r\n        switch (item.getItemId()) {\r\n            case R.id.edit_comment:\r\n//                if(FirebaseAuth.getInstance().getCurrentUser().getUid().equals(uid)) {\r\n//\r\n//                }\r\n                return true;\r\n            case R.id.delete_comment:\r\n                if(FirebaseAuth.getInstance().getCurrentUser().getUid().equals(uid)) {\r\n                    firestore.collection(\"Posts\").document(postid)\r\n                            .collection(\"Comments\").document(cid).delete().addOnCompleteListener(new OnCompleteListener<Void>() {\r\n                        @Override\r\n                        public void onComplete(@NonNull Task<Void> task) {\r\n                            if (task.isSuccessful()) {\r\n                                totalComments--;\r\n                                firestore.collection(\"Posts\").document(postid).update(\"total comments\", totalComments)\r\n                                        .addOnCompleteListener(new OnCompleteListener<Void>() {\r\n                                            @Override\r\n                                            public void onComplete(@NonNull Task<Void> task) {\r\n                                                if (task.isSuccessful()) {\r\n                                                    Toast.makeText(context, \"Deleted\", Toast.LENGTH_SHORT).show();\r\n                                                }\r\n                                            }\r\n                                        });\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                return true;\r\n\r\n            case R.id.report_comment:\r\n                Toast.makeText(context, \"Reported\", Toast.LENGTH_SHORT).show();\r\n\r\n                return true;\r\n\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n\r\n    class CommentViewHolder extends RecyclerView.ViewHolder {\r\n        TextView username;\r\n        TextView comment;\r\n        TextView timecreated;\r\n        TextView noOfLikes;\r\n        TextView likesText;\r\n        CircleImageView userimage;\r\n        ImageView moreOptions;\r\n        EditText commentText;\r\n        boolean isLiked = false;\r\n\r\n        public CommentViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n            userimage = itemView.findViewById(R.id.userImage);\r\n            username = itemView.findViewById(R.id.username);\r\n            comment = itemView.findViewById(R.id.comment);\r\n            timecreated = itemView.findViewById(R.id.timecreated);\r\n            noOfLikes = itemView.findViewById(R.id.noOfLikes);\r\n            likesText = itemView.findViewById(R.id.likes);\r\n            moreOptions = itemView.findViewById(R.id.moreOptions);\r\n            commentText=itemView.findViewById(R.id.commentText);\r\n\r\n\r\n//                commentText.addTextChangedListener(new TextWatcher() {\r\n//                    @Override\r\n//                    public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n//\r\n//                    }\r\n//\r\n//                    @Override\r\n//                    public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n//                        comment.setText(s);\r\n//                    }\r\n//\r\n//                    @Override\r\n//                    public void afterTextChanged(Editable s) {\r\n//\r\n//                    }\r\n//                });\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/bucketlist/adapters/RecyclerAdapterComment.java	(revision f57ef0fed87e42e91ed84a74df2a3c98f0485153)
+++ app/src/main/java/com/example/bucketlist/adapters/RecyclerAdapterComment.java	(date 1604664980706)
@@ -287,7 +287,6 @@
         TextView likesText;
         CircleImageView userimage;
         ImageView moreOptions;
-        EditText commentText;
         boolean isLiked = false;
 
         public CommentViewHolder(@NonNull View itemView) {
@@ -299,7 +298,7 @@
             noOfLikes = itemView.findViewById(R.id.noOfLikes);
             likesText = itemView.findViewById(R.id.likes);
             moreOptions = itemView.findViewById(R.id.moreOptions);
-            commentText=itemView.findViewById(R.id.commentText);
+
 
 
 //                commentText.addTextChangedListener(new TextWatcher() {
