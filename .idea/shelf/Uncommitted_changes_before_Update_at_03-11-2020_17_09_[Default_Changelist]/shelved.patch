Index: app/src/main/java/com/example/bucketlist/fragments/homePageFragment/CityFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.bucketlist.fragments.homePageFragment;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.ActionBarDrawerToggle;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.core.view.GravityCompat;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.DefaultItemAnimator;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport androidx.swiperefreshlayout.widget.SwipeRefreshLayout;\r\nimport androidx.viewpager.widget.ViewPager;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.bumptech.glide.request.target.CustomTarget;\r\nimport com.bumptech.glide.request.transition.Transition;\r\nimport com.example.bucketlist.AddNewCity;\r\nimport com.example.bucketlist.AddNewPost;\r\nimport com.example.bucketlist.R;\r\nimport com.example.bucketlist.SeeMoreCities;\r\nimport com.example.bucketlist.SeemorePosts;\r\nimport com.example.bucketlist.adapters.PostRecyclerAdapter;\r\nimport com.example.bucketlist.adapters.RecyclerAdapterTrendingCard;\r\nimport com.example.bucketlist.adapters.PageAdapterTrendingCard;\r\nimport com.example.bucketlist.model.ActivityModel;\r\nimport com.example.bucketlist.model.CityModel;\r\nimport com.example.bucketlist.model.TrendingCardModel;\r\nimport com.example.bucketlist.myPost;\r\nimport com.google.android.material.navigation.NavigationView;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.firestore.CollectionReference;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.EventListener;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.FirebaseFirestoreException;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\nimport com.vansuita.gaussianblur.GaussianBlur;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Timer;\r\nimport java.util.TimerTask;\r\n\r\n\r\npublic class CityFragment extends Fragment implements View.OnClickListener {\r\n\r\n    private View view;\r\n\r\n    RecyclerView recyclerView,postRecyclerView;\r\n    ViewPager viewPager;\r\n    FirebaseFirestore firestore;\r\n    FirebaseAuth firebaseAuth;\r\n    private PageAdapterTrendingCard pageAdapterTrendingCard;\r\n    private List<TrendingCardModel> trendingCardModelList;\r\n    TextView createCity;\r\n    ImageView activity;\r\n    TextView seemore,postMore;\r\n\r\n    Toolbar toolbar;\r\n    DrawerLayout drawerLayout;\r\n    ActionBarDrawerToggle actionBarDrawerToggle;\r\n    NavigationView navigationView;\r\n    Context context;\r\n\r\n    String user_id;\r\n    String stringImageUri;\r\n\r\n    ImageView profileImage;\r\n    TextView profileName;\r\n\r\n\r\n\r\n\r\n    int currentPage = 0;\r\n    Timer timer;\r\n    final long DELAY_MS = 500;\r\n    final long PERIOD_MS = 3000;\r\n\r\n    RecyclerAdapterTrendingCard recyclerAdapterTrendingCard;\r\n    PostRecyclerAdapter postRecyclerAdapter;\r\n    List<CityModel> arrayList;\r\n    List<ActivityModel> List;\r\n\r\n\r\n\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n\r\n        view= inflater.inflate(R.layout.fragment_city,container,false);\r\n        createCity = view.findViewById(R.id.city);\r\n        activity = view.findViewById(R.id.activity);\r\n        viewPager = view.findViewById(R.id.viewPager);\r\n        seemore = view.findViewById(R.id.seemore);\r\n        postMore = view.findViewById(R.id.postMore);\r\n\r\n        toolbar = view.findViewById(R.id.toolBar);\r\n        ((AppCompatActivity)getActivity()).setSupportActionBar(toolbar);\r\n        drawerLayout = view.findViewById(R.id.drawer);\r\n        navigationView = view.findViewById(R.id.navigationView);\r\n        navigationView.setNavigationItemSelectedListener(new NavigationView.OnNavigationItemSelectedListener() {\r\n            @Override\r\n            public boolean onNavigationItemSelected(@NonNull MenuItem item) {\r\n\r\n                switch (item.getItemId()){\r\n                    case R.id.myPost:\r\n                        Intent i = new Intent(getContext(), myPost.class);\r\n                        startActivity(i);\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n\r\n\r\n        actionBarDrawerToggle = new ActionBarDrawerToggle(this.getActivity(),drawerLayout,toolbar,R.string.draw_open,R.string.drawer_closed);\r\n        actionBarDrawerToggle.syncState();\r\n        actionBarDrawerToggle.getDrawerArrowDrawable().setColor(getResources().getColor(R.color.blackcolor));\r\n\r\n        View headerView = navigationView.getHeaderView(0);\r\n        ImageView cancelButton = headerView.findViewById(R.id.cancel_button);\r\n\r\n        cancelButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                drawerLayout.closeDrawer(GravityCompat.START);\r\n            }\r\n        });\r\n\r\n\r\n        firestore =FirebaseFirestore.getInstance();\r\n        firebaseAuth = FirebaseAuth.getInstance();\r\n        context = getActivity().getApplicationContext();\r\n\r\n        activity.setOnClickListener(this);\r\n        createCity.setOnClickListener(this);\r\n        seemore.setOnClickListener(this);\r\n//        postMore.setOnClickListener(this);\r\n        recyclerView =  view.findViewById(R.id.recycler_view);\r\n\r\n        postRecyclerView=view.findViewById(R.id.recycler_view_post);\r\n\r\n        profileImage = view.findViewById(R.id.profileImage1);\r\n        profileName = view.findViewById(R.id.profileName1);\r\n        user_id = firebaseAuth.getCurrentUser().getUid();\r\n\r\n\r\n        trendingCardDataLoading();\r\n\r\n\r\n\r\n\r\n\r\n        PostLoading();\r\n\r\n        recyclerView.setLayoutManager(new LinearLayoutManager(getContext(),LinearLayoutManager.HORIZONTAL,false));\r\n        recyclerView.setItemAnimator(new DefaultItemAnimator());\r\n\r\n        trendingbottomCardDataLoading();\r\n\r\n       // autoScroll();\r\n\r\n\r\n\r\n\r\n        loadData(user_id);\r\n\r\n        return  view;\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View v) {\r\n        if (v.getId() == R.id.city){\r\n            Intent i = new Intent(getContext(), AddNewCity.class);\r\n            startActivity(i);\r\n        }\r\n\r\n        else if (v.getId() == R.id.activity){\r\n            Intent i = new Intent(getContext(), AddNewPost.class);\r\n            startActivity(i);\r\n        }\r\n\r\n        else if (v.getId() == R.id.seemore){\r\n            Intent i = new Intent(getContext(), SeeMoreCities.class);\r\n            startActivity(i);\r\n        }\r\n        else if (v.getId() == R.id.postMore){\r\n            Intent i = new Intent(getContext(), SeemorePosts.class);\r\n            startActivity(i);\r\n        }\r\n    }\r\n\r\n    public void trendingCardDataLoading(){\r\n\r\n\r\n        trendingCardModelList = new ArrayList<>();\r\n\r\n        CollectionReference collectionReference = firestore.collection(\"Cities\");\r\n        collectionReference.addSnapshotListener(new EventListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onEvent(@Nullable QuerySnapshot value, @Nullable FirebaseFirestoreException error) {\r\n                if (error!=null){\r\n                    Log.d(\"Exception Failed\", \"onEvent: 0  \" + error);\r\n\r\n                }\r\n                else{\r\n                    for (final QueryDocumentSnapshot snapshot : value){\r\n                        DocumentReference documentReference = firestore.collection(\"Cities\").document(snapshot.getId());\r\n                        documentReference.addSnapshotListener(new EventListener<DocumentSnapshot>() {\r\n                            @Override\r\n                            public void onEvent(@Nullable DocumentSnapshot value, @Nullable FirebaseFirestoreException error) {\r\n                                if (error!=null){\r\n                                    Log.d(\"Exception Failed\", \"onEvent: 0  \" + error);\r\n\r\n                                }\r\n                                else{\r\n                                    trendingCardModelList.add(new TrendingCardModel(value.getString(\"City Name\"),\r\n                                            value.getString(\"Country Name\"),\r\n                                            value.getString(\"City Background Image\"),snapshot.getId()));\r\n                                    pageAdapterTrendingCard.notifyDataSetChanged();\r\n                                    Log.d(\"size\",Integer.toString(trendingCardModelList.size()));\r\n                                }\r\n\r\n                            }\r\n                        });\r\n\r\n                    }\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        pageAdapterTrendingCard = new PageAdapterTrendingCard(getContext(),trendingCardModelList);\r\n        viewPager.setAdapter(pageAdapterTrendingCard);\r\n        viewPager.setPadding(150,0,150,0);\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    public void trendingbottomCardDataLoading(){\r\n\r\n        arrayList = new ArrayList<>();\r\n\r\n        CollectionReference collectionReference = firestore.collection(\"Cities\");\r\n        collectionReference.addSnapshotListener(new EventListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onEvent(@Nullable QuerySnapshot value, @Nullable FirebaseFirestoreException error) {\r\n                if (error!=null){\r\n                    Log.d(\"Exception Failed\", \"onEvent: 0  \" + error);\r\n\r\n                }\r\n                else{\r\n                    for (final QueryDocumentSnapshot snapshot : value){\r\n                        DocumentReference documentReference = firestore.collection(\"Cities\").document(snapshot.getId());\r\n                        documentReference.addSnapshotListener(new EventListener<DocumentSnapshot>() {\r\n                            @Override\r\n                            public void onEvent(@Nullable DocumentSnapshot value, @Nullable FirebaseFirestoreException error) {\r\n                                if (error!=null){\r\n                                    Log.d(\"Exception Failed\", \"onEvent: 0  \" + error);\r\n\r\n                                }\r\n                                else{\r\n                                    arrayList.add(new CityModel(value.getString(\"City Background Image\"),\r\n                                            value.getString(\"City Name\"),\r\n                                            value.getString(\"Country Name\"),snapshot.getId()));\r\n                                    recyclerAdapterTrendingCard.notifyDataSetChanged();\r\n                                }\r\n\r\n                            }\r\n                        });\r\n\r\n                    }\r\n\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n        recyclerAdapterTrendingCard = new RecyclerAdapterTrendingCard(getContext(),arrayList);\r\n        recyclerView.setAdapter(recyclerAdapterTrendingCard);\r\n//        viewPager.setPadding(50,0,50,0);\r\n\r\n    }\r\n\r\n\r\n\r\n    public void autoScroll(){\r\n\r\n        final Handler handler = new Handler();\r\n        final Runnable Update = new Runnable() {\r\n            public void run() {\r\n\r\n                if (viewPager.getCurrentItem() == trendingCardModelList.size()-1) {\r\n                    currentPage=0;\r\n                }\r\n\r\n//                viewPager.setCurrentItem(currentPage, true);\r\n//                currentPage++;\r\n            }\r\n        };\r\n\r\n        timer = new Timer(); // This will create a new Thread\r\n        timer.schedule(new TimerTask() { // task to be scheduled\r\n            @Override\r\n            public void run() {\r\n\r\n                handler.post(Update);\r\n            }\r\n        }, DELAY_MS, PERIOD_MS);\r\n    }\r\n\r\n    public void PostLoading(){\r\n\r\n        List = new ArrayList<>();\r\n\r\n        CollectionReference collectionReference = firestore.collection(\"Posts\");\r\n        collectionReference.addSnapshotListener(new EventListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onEvent(@Nullable QuerySnapshot value, @Nullable FirebaseFirestoreException error) {\r\n                if (error!=null){\r\n                    Log.d(\"Exception Failed\", \"onEvent: 0  \" + error);\r\n\r\n                }\r\n                else{\r\n                    for (final QueryDocumentSnapshot snapshot : value){\r\n                        DocumentReference documentReference = firestore.collection(\"Posts\").document(snapshot.getId());\r\n                        documentReference.addSnapshotListener(new EventListener<DocumentSnapshot>() {\r\n                            @Override\r\n                            public void onEvent(@Nullable DocumentSnapshot value, @Nullable FirebaseFirestoreException error) {\r\n                                if (error!=null){\r\n                                    Log.d(\"Exception Failed\", \"onEvent: 0  \" + error);\r\n\r\n                                }\r\n                                else{\r\n                                   List.add(new ActivityModel(value.getString(\"createdBy\"),\r\n                                           value.getString(\"title\"),\r\n                                           value.getLong(\"timeStamp\").longValue(),\r\n                                           value.getString(\"location\"),\r\n                                           value.getLong(\"likes\").intValue(),\r\n                                           value.getId()));\r\n                                    postRecyclerAdapter.notifyDataSetChanged();\r\n                                }\r\n\r\n                            }\r\n                        });\r\n\r\n                    }\r\n\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n        postRecyclerAdapter = new PostRecyclerAdapter(getContext(),List);\r\n        postRecyclerView.setAdapter(postRecyclerAdapter);\r\n\r\n\r\n    }\r\n    private void loadData(String user_id) {\r\n        DocumentReference documentReference = firestore.collection(\"Users\").document(user_id);\r\n        documentReference.addSnapshotListener(new EventListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onEvent(@Nullable DocumentSnapshot value, @Nullable FirebaseFirestoreException error) {\r\n                if (error!=null){\r\n                    Log.d(\"City Fragment error\",\"Error:\"+error.getMessage());\r\n                }\r\n                else {\r\n                    profileName.setText(value.getString(\"Display Name\"));\r\n                    stringImageUri = value.getString(\"Image Uri\");\r\n                    Glide.with(context).load(stringImageUri).into(profileImage);\r\n\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/bucketlist/fragments/homePageFragment/CityFragment.java	(revision ac18a6d906d149689d6cefa2876acf0b2a17a45f)
+++ app/src/main/java/com/example/bucketlist/fragments/homePageFragment/CityFragment.java	(date 1604399343857)
@@ -156,8 +156,8 @@
 
         postRecyclerView=view.findViewById(R.id.recycler_view_post);
 
-        profileImage = view.findViewById(R.id.profileImage1);
-        profileName = view.findViewById(R.id.profileName1);
+        profileImage = headerView.findViewById(R.id.profileImage1);
+        profileName = headerView.findViewById(R.id.profileName1);
         user_id = firebaseAuth.getCurrentUser().getUid();
 
 
Index: app/src/main/java/com/example/bucketlist/PostInnerPage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.bucketlist;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.view.WindowManager;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport androidx.appcompat.widget.Toolbar;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.EventListener;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.FirebaseFirestoreException;\r\n\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\nimport java.util.TimeZone;\r\n\r\nimport de.hdodenhof.circleimageview.CircleImageView;\r\n\r\npublic class PostInnerPage extends AppCompatActivity implements View.OnClickListener {\r\n    String postId;\r\n    String location,username,title,description;\r\n    String dateAsText;\r\n    int likes;\r\n    Long timestamp;\r\n    FirebaseFirestore firestore;\r\n    Toolbar toolbar;\r\n\r\n    CircleImageView userImage;\r\n\r\n    FirebaseAuth auth;\r\n\r\n    ImageView backButton;\r\n\r\n    TextView locationView,createdBy,timeCreated,titleView,descriptionView,likesView;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n        setContentView(R.layout.post_inner_page_activity);\r\n\r\n        toolbar = findViewById(R.id.toolBar);\r\n        setSupportActionBar(toolbar);\r\n\r\n\r\n\r\n        postId = getIntent().getStringExtra(\"postId\");\r\n        initialize();\r\n\r\n\r\n    }\r\n\r\n    public void initialize(){\r\n        auth = FirebaseAuth.getInstance();\r\n        firestore = FirebaseFirestore.getInstance();\r\n        locationView = findViewById(R.id.location);\r\n        createdBy = findViewById(R.id.createdBy);\r\n        timeCreated = findViewById(R.id.timeCreated);\r\n        titleView =findViewById(R.id.titleView);\r\n        descriptionView  =findViewById(R.id.descriptionView);\r\n        likesView = findViewById(R.id.noOfLikes);\r\n        backButton = findViewById(R.id.backButton);\r\n        userImage = findViewById(R.id.userImage);\r\n\r\n        backButton.setOnClickListener(this);\r\n\r\n        if (postId!=null){\r\n            loadPost();\r\n        }\r\n    }\r\n\r\n    public void loadPost(){\r\n        DocumentReference documentReference = firestore.collection(\"Posts\").document(postId);\r\n        documentReference.addSnapshotListener(new EventListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onEvent(@Nullable DocumentSnapshot value, @Nullable FirebaseFirestoreException error) {\r\n                if (error!=null){\r\n                    error.printStackTrace();\r\n                }\r\n                else {\r\n                    location =  value.getString(\"location\");\r\n                    String[] arr = location.split(\", \",0);\r\n                    String cityFilename = arr[0] + \", \" + arr[arr.length - 1];\r\n                    locationView.setText(cityFilename);\r\n\r\n\r\n                    Calendar calendar = Calendar.getInstance();\r\n                    calendar.setTime(new Date());\r\n                    SimpleDateFormat sdf = new SimpleDateFormat(\"hh:mm\");\r\n                    sdf.setTimeZone(TimeZone.getDefault());\r\n                    timestamp = value.getLong(\"timeStamp\").longValue();\r\n                    dateAsText = sdf.format(new Date(timestamp).getTime());\r\n                    timeCreated.setText(dateAsText);\r\n\r\n\r\n                    title = value.getString(\"title\");\r\n                    titleView.setText(title);\r\n\r\n\r\n                    description = value.getString(\"description\");\r\n                    descriptionView.setText(description);\r\n\r\n\r\n                    likes = value.getLong(\"likes\").intValue();\r\n                    likesView.setText(Integer.toString(likes));\r\n\r\n\r\n\r\n                    username = value.getString(\"createdBy\");\r\n                    FirebaseFirestore.getInstance().collection(\"Users\")\r\n                            .document(username).addSnapshotListener(new EventListener<DocumentSnapshot>() {\r\n                        @Override\r\n                        public void onEvent(@Nullable DocumentSnapshot value, @Nullable FirebaseFirestoreException error) {\r\n                            if (error!=null){\r\n                                Log.e(\"error\",error.getMessage());\r\n                            }\r\n                            else {\r\n                                createdBy.setText(value.getString(\"Display Name\"));\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n        firestore.collection(\"Users\").document(auth.getCurrentUser().getUid()).addSnapshotListener(new EventListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onEvent(@Nullable DocumentSnapshot value, @Nullable FirebaseFirestoreException error) {\r\n                if (error!=null){\r\n                    error.printStackTrace();\r\n                }\r\n                else{\r\n                    Glide.with(getApplicationContext()).load(value.getString(\"Image Uri\")).into(userImage);\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View view) {\r\n        switch (view.getId()){\r\n            case R.id.backButton:\r\n                Intent i = new Intent(this, CityInnerPage.class);\r\n                i.putExtra(\"cityId\",location);\r\n                finish();\r\n                startActivity(i);\r\n\r\n\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/bucketlist/PostInnerPage.java	(revision ac18a6d906d149689d6cefa2876acf0b2a17a45f)
+++ app/src/main/java/com/example/bucketlist/PostInnerPage.java	(date 1604403243281)
@@ -1,5 +1,6 @@
 package com.example.bucketlist;
 
+import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.appcompat.app.AppCompatActivity;
 
@@ -10,9 +11,13 @@
 import android.view.WindowManager;
 import android.widget.ImageView;
 import android.widget.TextView;
+import android.widget.Toast;
+
 import androidx.appcompat.widget.Toolbar;
 
 import com.bumptech.glide.Glide;
+import com.google.android.gms.tasks.OnFailureListener;
+import com.google.android.gms.tasks.OnSuccessListener;
 import com.google.firebase.auth.FirebaseAuth;
 import com.google.firebase.firestore.DocumentReference;
 import com.google.firebase.firestore.DocumentSnapshot;
@@ -23,6 +28,8 @@
 import java.text.SimpleDateFormat;
 import java.util.Calendar;
 import java.util.Date;
+import java.util.HashMap;
+import java.util.Map;
 import java.util.TimeZone;
 
 import de.hdodenhof.circleimageview.CircleImageView;
@@ -40,7 +47,7 @@
 
     FirebaseAuth auth;
 
-    ImageView backButton;
+    ImageView backButton,bookmarkButton;
 
     TextView locationView,createdBy,timeCreated,titleView,descriptionView,likesView;
 
@@ -72,8 +79,10 @@
         likesView = findViewById(R.id.noOfLikes);
         backButton = findViewById(R.id.backButton);
         userImage = findViewById(R.id.userImage);
+        bookmarkButton = findViewById(R.id.saveButton);
 
         backButton.setOnClickListener(this);
+        bookmarkButton.setOnClickListener(this);
 
         if (postId!=null){
             loadPost();
@@ -149,6 +158,26 @@
 
     }
 
+    public void bookmarking(){
+        DocumentReference documentReference = firestore.collection("Users").document(auth.getCurrentUser().getUid())
+                .collection("Bookmarks").document(postId);
+        DocumentReference postDocRef = firestore.collection("Posts").document(postId);
+        Map map = new HashMap();
+        map.put("post reference",documentReference);
+        documentReference.set(map).addOnSuccessListener(new OnSuccessListener<Void>() {
+            @Override
+            public void onSuccess(Void aVoid) {
+                Log.d("successful","successful");
+                Toast.makeText(PostInnerPage.this, "Bookmarked", Toast.LENGTH_SHORT).show();
+            }
+        }).addOnFailureListener(new OnFailureListener() {
+            @Override
+            public void onFailure(@NonNull Exception e) {
+                e.printStackTrace();
+            }
+        });
+    }
+
     @Override
     public void onClick(View view) {
         switch (view.getId()){
@@ -157,6 +186,9 @@
                 i.putExtra("cityId",location);
                 finish();
                 startActivity(i);
+                break;
+            case R.id.saveButton:
+               bookmarking();
 
 
         }
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_01-11-2020_16_11__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_01-11-2020_16_11__Default_Changelist_.xml
