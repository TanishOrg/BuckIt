Index: app/src/main/java/com/example/bucketlist/AddNewCity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.bucketlist;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.RelativeLayout;\r\nimport android.widget.Toast;\r\n\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.JsonArrayRequest;\r\nimport com.android.volley.toolbox.JsonObjectRequest;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.example.bucketlist.adapters.RecyclerAdapterWallpaper;\r\nimport com.example.bucketlist.fragments.homePageFragment.CityFragment;\r\nimport com.example.bucketlist.fragments.homePageFragment.ProfileFragment;\r\nimport com.example.bucketlist.layout.userLayout.DetailProfile;\r\nimport com.example.bucketlist.model.WallpaperModel;\r\nimport com.google.android.material.snackbar.BaseTransientBottomBar;\r\nimport com.google.android.material.snackbar.Snackbar;\r\nimport com.google.gson.JsonArray;\r\nimport com.ismaeldivita.chipnavigation.ChipNavigationBar;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\n\r\npublic class AddNewCity extends AppCompatActivity implements View.OnClickListener {\r\n\r\n    Button cancelButton , createButton;\r\n    EditText addCityEditText;\r\n    RecyclerView recyclerView;\r\n    String City;\r\n    RecyclerAdapterWallpaper recyclerAdapterWallpaper;\r\n    List<WallpaperModel> wallpaperModelList;\r\n    RelativeLayout smallRelativeLayout;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.add_new_city);\r\n\r\n\r\n\r\n        cancelButton = findViewById(R.id.cancelButton);\r\n        createButton = findViewById(R.id.createButton);\r\n        addCityEditText = findViewById(R.id.addCityEditText);\r\n        smallRelativeLayout = findViewById(R.id.smallRelativeLayout);\r\n        recyclerView = findViewById(R.id.recyclerView);\r\n        wallpaperModelList = new ArrayList<>();\r\n        recyclerAdapterWallpaper = new RecyclerAdapterWallpaper(this,wallpaperModelList);\r\n\r\n        recyclerView.setAdapter(recyclerAdapterWallpaper);\r\n\r\n//        LinearLayoutManager linearLayoutManager = new LinearLayoutManager(this,LinearLayoutManager.VERTICAL,);\r\n//        recyclerView.setLayoutManager(linearLayoutManager);\r\n\r\n        cancelButton.setOnClickListener(this);\r\n        smallRelativeLayout.setOnClickListener(this);\r\n\r\n\r\n    }\r\n\r\n    public void  fetchWallpaper(){\r\n\r\n        String url = \"https://api.unsplash.com/search/photos?query=\"+City+\"&client_id=oxQo4AhPw8db0J1kqs9urtDCYtgGm4Kpil2aA8pNyU8&per_page=15\";\r\n\r\n\r\n        JsonObjectRequest objectRequest = new JsonObjectRequest(Request.Method.GET, url,\r\n                null, new Response.Listener<JSONObject>() {\r\n            @Override\r\n            public void onResponse(JSONObject response) {\r\n\r\n                try {\r\n                    Log.d(\"response\", response.toString());\r\n\r\n                    JSONArray array = response.getJSONArray(\"results\");\r\n\r\n                    for (int i =0;i<array.length();i++){\r\n                        JSONObject object = array.getJSONObject(i);\r\n                        String id = object.getString(\"id\");\r\n                        Log.d(\"photo id\", id);\r\n\r\n                        JSONObject objectUrls = object.getJSONObject(\"urls\");\r\n                        String rawImageUrl = objectUrls.getString(\"raw\");\r\n\r\n                        WallpaperModel wallpaperModel = new WallpaperModel(id,rawImageUrl);\r\n                        wallpaperModelList.add(wallpaperModel);\r\n\r\n                    }\r\n                    recyclerAdapterWallpaper.notifyDataSetChanged();\r\n\r\n\r\n                }catch (JSONException e){\r\n                    e.printStackTrace();\r\n                    Toast.makeText(AddNewCity.this,\" Error!!\"+e.toString(),Toast.LENGTH_LONG).show();\r\n                    Log.d(\"error\",e.getMessage());\r\n                }\r\n            }\r\n        }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n                error.printStackTrace();\r\n                Log.d(\"error12\",error.toString());\r\n            }\r\n        });\r\n\r\n        RequestQueue queue = VolleySingleton.getInstance(this).getRequestQueue();\r\n        queue.add(objectRequest);\r\n        wallpaperModelList.clear();\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View v) {\r\n        if (v.getId() == R.id.cancelButton){\r\n\r\n\r\n\r\n\r\n        }\r\n        if (v.getId() == R.id.smallRelativeLayout){\r\n            if(!addCityEditText.getText().toString().isEmpty()){\r\n                City = addCityEditText.getText().toString();\r\n                fetchWallpaper();\r\n              recyclerView.setVisibility(View.VISIBLE);\r\n            }\r\n            else{\r\n                recyclerView.setVisibility(View.GONE);\r\n                Snackbar.make(v,\"Field is empty.\",Snackbar.LENGTH_LONG).show();\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/bucketlist/AddNewCity.java	(revision 16bb57fc232df084a46a3de4f01d70c838271c48)
+++ app/src/main/java/com/example/bucketlist/AddNewCity.java	(date 1603196657906)
@@ -122,8 +122,9 @@
             }
         });
 
-        RequestQueue queue = VolleySingleton.getInstance(this).getRequestQueue();
-        queue.add(objectRequest);
+//        RequestQueue queue = VolleySingleton.getInstance(this).getRequestQueue();
+//        queue.add(objectRequest);
+        VolleySingleton.getInstance().getRequestQueue().add(objectRequest);
         wallpaperModelList.clear();
 
 
Index: app/src/main/java/com/example/bucketlist/VolleySingleton.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.bucketlist;\r\n\r\nimport android.content.Context;\r\n\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.toolbox.Volley;\r\n\r\nimport kotlin.jvm.Synchronized;\r\n\r\npublic class VolleySingleton {\r\n    private static VolleySingleton mInstance;\r\n    private RequestQueue mRequestQueue;\r\n\r\n    private VolleySingleton(Context context){\r\n        mRequestQueue = Volley.newRequestQueue(context.getApplicationContext());\r\n    }\r\n\r\n    public static synchronized VolleySingleton getInstance(Context context){\r\n        if (mInstance == null){\r\n            mInstance = new VolleySingleton(context);\r\n        }\r\n\r\n        return mInstance;\r\n    }\r\n\r\n    public RequestQueue getRequestQueue(){\r\n        return mRequestQueue;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/bucketlist/VolleySingleton.java	(revision 16bb57fc232df084a46a3de4f01d70c838271c48)
+++ app/src/main/java/com/example/bucketlist/VolleySingleton.java	(date 1603197126493)
@@ -1,5 +1,6 @@
 package com.example.bucketlist;
 
+import android.app.Application;
 import android.content.Context;
 
 import com.android.volley.RequestQueue;
@@ -7,24 +8,49 @@
 
 import kotlin.jvm.Synchronized;
 
-public class VolleySingleton {
+public class VolleySingleton extends Application {
     private static VolleySingleton mInstance;
     private RequestQueue mRequestQueue;
 
-    private VolleySingleton(Context context){
-        mRequestQueue = Volley.newRequestQueue(context.getApplicationContext());
-    }
+    public static final String TAG = VolleySingleton.class
+            .getSimpleName();
 
-    public static synchronized VolleySingleton getInstance(Context context){
-        if (mInstance == null){
-            mInstance = new VolleySingleton(context);
-        }
+    public static synchronized VolleySingleton getInstance() {
+        return mInstance != null ? mInstance:new VolleySingleton();
+    }
 
-        return mInstance;
-    }
 
-    public RequestQueue getRequestQueue(){
+    public RequestQueue getRequestQueue() {
+        if (mRequestQueue == null) {
+            mRequestQueue = Volley.newRequestQueue(getApplicationContext());
+        }
+
         return mRequestQueue;
     }
 
+
+    @Override
+    public void onCreate() {
+        super.onCreate();
+        mInstance = this;
+    }
+
+    //    public static synchronized VolleySingleton getInstance(Context context){
+//        if (mInstance == null){
+//            mInstance = new VolleySingleton(context);
+//        }
+//
+//        return mInstance;
+//    }
+
+//    private VolleySingleton(Context context){
+//        mRequestQueue = Volley.newRequestQueue(context.getApplicationContext());
+//    }
+
+//    public RequestQueue getRequestQueue(){
+//        return mRequestQueue;
+//    }
+
+
+
 }
Index: app/src/main/java/com/example/bucketlist/model/ActivityModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/bucketlist/model/ActivityModel.java	(date 1603195274215)
+++ app/src/main/java/com/example/bucketlist/model/ActivityModel.java	(date 1603195274215)
@@ -0,0 +1,5 @@
+package com.example.bucketlist.model;
+
+public class ActivityModel {
+    String createdByUserID;
+}
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"testRunner\" value=\"PLATFORM\" />\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"gradleJvm\" value=\"1.8\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/gradle.xml	(revision 16bb57fc232df084a46a3de4f01d70c838271c48)
+++ .idea/gradle.xml	(date 1603195754584)
@@ -15,6 +15,7 @@
           </set>
         </option>
         <option name="resolveModulePerSourceSet" value="false" />
+        <option name="useQualifiedModuleNames" value="true" />
       </GradleProjectSettings>
     </option>
   </component>
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_20-10-2020_12_56__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_20-10-2020_12_56__Default_Changelist_.xml
