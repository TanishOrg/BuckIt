Index: app/src/main/java/com/example/bucketlist/AddNewCity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.bucketlist;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.text.Editable;\r\nimport android.text.TextWatcher;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.AutoCompleteTextView;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.RelativeLayout;\r\nimport android.widget.Toast;\r\n\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.JsonArrayRequest;\r\nimport com.android.volley.toolbox.JsonObjectRequest;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.example.bucketlist.adapters.RecyclerAdapterWallpaper;\r\nimport com.example.bucketlist.fragments.homePageFragment.CityFragment;\r\nimport com.example.bucketlist.fragments.homePageFragment.ProfileFragment;\r\nimport com.example.bucketlist.layout.userLayout.DetailProfile;\r\nimport com.example.bucketlist.model.WallpaperModel;\r\nimport com.example.bucketlist.utils.CityListHelper;\r\nimport com.google.android.material.snackbar.BaseTransientBottomBar;\r\nimport com.google.android.material.snackbar.Snackbar;\r\nimport com.google.gson.JsonArray;\r\nimport com.ismaeldivita.chipnavigation.ChipNavigationBar;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\n\r\nimport okhttp3.OkHttpClient;\r\n\r\npublic class AddNewCity extends AppCompatActivity implements View.OnClickListener {\r\n\r\n    Button cancelButton , createButton;\r\n    AutoCompleteTextView addCityEditText;\r\n    RecyclerView recyclerView;\r\n    String City;\r\n    RecyclerAdapterWallpaper recyclerAdapterWallpaper;\r\n    List<WallpaperModel> wallpaperModelList;\r\n    RelativeLayout smallRelativeLayout;\r\n\r\n    ArrayAdapter<String> arrayAdapter;\r\n\r\n    private static List<String> city= new ArrayList<>();\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.add_new_city);\r\n\r\n        cancelButton = findViewById(R.id.cancelButton);\r\n        createButton = findViewById(R.id.createButton);\r\n        addCityEditText = findViewById(R.id.addCityEditText);\r\n        smallRelativeLayout = findViewById(R.id.smallRelativeLayout);\r\n        recyclerView = findViewById(R.id.recyclerView);\r\n        wallpaperModelList = new ArrayList<>();\r\n        recyclerAdapterWallpaper = new RecyclerAdapterWallpaper(this,wallpaperModelList);\r\n\r\n        recyclerView.setAdapter(recyclerAdapterWallpaper);\r\n        cancelButton.setOnClickListener(this);\r\n        smallRelativeLayout.setOnClickListener(this);\r\n\r\n    }\r\n\r\n    private void loadCityList(String search) {\r\n        CityListHelper cityListHelper = new CityListHelper(this,search) {\r\n\r\n            @Override\r\n            protected void onCompleteListener(List<CityQuery> queryResult) {\r\n                Log.d(\"Listener \", \"onCompleteListener: \" + queryResult.toString());\r\n                List<String> list = new ArrayList<>();\r\n                for (CityQuery query: queryResult\r\n                     ) {\r\n                    list.add(query.getDisplayName());\r\n                }\r\n                city = list;\r\n                arrayAdapter = new ArrayAdapter<>(getApplicationContext(),\r\n                        android.R.layout.simple_list_item_1,city);\r\n                addCityEditText.setAdapter(arrayAdapter);\r\n                arrayAdapter.notifyDataSetChanged();\r\n            }\r\n        };\r\n    }\r\n\r\n    public void  fetchWallpaper(){\r\n\r\n        String url = \"https://api.unsplash.com/search/photos?query=\"+City+\"&client_id=oxQo4AhPw8db0J1kqs9urtDCYtgGm4Kpil2aA8pNyU8&per_page=15\";\r\n\r\n\r\n        JsonObjectRequest objectRequest = new JsonObjectRequest(Request.Method.GET, url,\r\n                null, new Response.Listener<JSONObject>() {\r\n            @Override\r\n            public void onResponse(JSONObject response) {\r\n\r\n                try {\r\n                    Log.d(\"response\", response.toString());\r\n\r\n                    JSONArray array = response.getJSONArray(\"results\");\r\n\r\n                    for (int i =0;i<array.length();i++){\r\n                        JSONObject object = array.getJSONObject(i);\r\n                        String id = object.getString(\"id\");\r\n                        Log.d(\"photo id\", id);\r\n\r\n                        JSONObject objectUrls = object.getJSONObject(\"urls\");\r\n                        String rawImageUrl = objectUrls.getString(\"raw\");\r\n\r\n                        WallpaperModel wallpaperModel = new WallpaperModel(id,rawImageUrl);\r\n                        wallpaperModelList.add(wallpaperModel);\r\n\r\n                    }\r\n                    recyclerAdapterWallpaper.notifyDataSetChanged();\r\n\r\n\r\n                }catch (JSONException e){\r\n                    e.printStackTrace();\r\n                    Toast.makeText(AddNewCity.this,\" Error!!\"+e.toString(),Toast.LENGTH_LONG).show();\r\n                    Log.d(\"error\",e.getMessage());\r\n                }\r\n            }\r\n        }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n                error.printStackTrace();\r\n                Log.d(\"error12\",error.toString());\r\n            }\r\n        });\r\n\r\n        RequestQueue queue = VolleySingleton.getInstance(this).getRequestQueue();\r\n        queue.add(objectRequest);\r\n//        VolleySingleton.getInstance().addToRequestQueue(objectRequest);;\r\n        wallpaperModelList.clear();\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View v) {\r\n        if (v.getId() == R.id.cancelButton){\r\n\r\n\r\n        }\r\n        if (v.getId() == R.id.smallRelativeLayout){\r\n            if(!addCityEditText.getText().toString().isEmpty()){\r\n                City = addCityEditText.getText().toString();\r\n                fetchWallpaper();\r\n              recyclerView.setVisibility(View.VISIBLE);\r\n            }\r\n            else{\r\n                recyclerView.setVisibility(View.GONE);\r\n                Snackbar.make(v,\"Field is empty.\",Snackbar.LENGTH_LONG).show();\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n        addCityEditText.addTextChangedListener(tf);\r\n    }\r\n\r\n    TextWatcher tf = new TextWatcher() {\r\n        @Override\r\n        public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n        }\r\n\r\n        @Override\r\n        public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n        }\r\n\r\n        @Override\r\n        public void afterTextChanged(Editable s) {\r\n            Log.d(\"Ok\", \"afterTextChanged: \" + s.toString());\r\n            loadCityList(s.toString());\r\n        }\r\n    };\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/bucketlist/AddNewCity.java	(revision 7629220d87edbf09bd9c683e59d2eeb7d3751540)
+++ app/src/main/java/com/example/bucketlist/AddNewCity.java	(date 1603381642716)
@@ -76,7 +76,6 @@
         recyclerView = findViewById(R.id.recyclerView);
         wallpaperModelList = new ArrayList<>();
         recyclerAdapterWallpaper = new RecyclerAdapterWallpaper(this,wallpaperModelList);
-
         recyclerView.setAdapter(recyclerAdapterWallpaper);
         cancelButton.setOnClickListener(this);
         smallRelativeLayout.setOnClickListener(this);
