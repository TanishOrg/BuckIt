Index: app/src/main/java/com/example/bucketlist/PostInnerPage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.bucketlist;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.content.Intent;\r\nimport android.graphics.PorterDuff;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.view.WindowManager;\r\nimport android.widget.EditText;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.core.graphics.drawable.DrawableCompat;\r\nimport androidx.recyclerview.widget.DefaultItemAnimator;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.example.bucketlist.adapters.RecyclerAdapterComment;\r\nimport com.example.bucketlist.adapters.RecyclerAdapterTrendingCard;\r\nimport com.example.bucketlist.model.CommentModel;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.firestore.CollectionReference;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.EventListener;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.FirebaseFirestoreException;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\n\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\nimport java.util.TimeZone;\r\n\r\nimport de.hdodenhof.circleimageview.CircleImageView;\r\n\r\npublic class PostInnerPage extends AppCompatActivity implements View.OnClickListener {\r\n    private static final String TAG = \"Post Inner Page\";\r\n    String myUid,postId;\r\n    String location,username,title,description;\r\n    String dateAsText;\r\n    int likes = 0;\r\n    int dislikes = 0;\r\n    boolean isdisliked = false;\r\n    boolean isliked = false;\r\n    Long timestamp;\r\n    FirebaseFirestore firestore;\r\n    Toolbar toolbar;\r\n    int totalComments;\r\n    CircleImageView userImage;\r\n    RecyclerView commentRecyclerView;\r\n    List<CommentModel> commentModelList ;\r\n    RecyclerAdapterComment adapterComment;\r\n\r\n    String toactivity;\r\n    int intpoints = 0;\r\n    FirebaseAuth auth;\r\n\r\n    EditText commentText;\r\n    ImageView backButton,bookmarkButton,sendCommentButton;\r\n    ImageView likeButton;\r\n    ImageView dislikeButton;\r\n    TextView locationView,createdBy,timeCreated,titleView,descriptionView,points\r\n            ,noOfComments,toolbartitle;\r\n\r\n    boolean isbookmarked=false;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n        setContentView(R.layout.post_inner_page_activity);\r\n\r\n        toolbar = findViewById(R.id.toolBar);\r\n        setSupportActionBar(toolbar);\r\n\r\n        toactivity = getIntent().getStringExtra(\"to activity\");\r\n        postId = getIntent().getStringExtra(\"postId\");\r\n        initialize();\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    public void initialize(){\r\n        auth = FirebaseAuth.getInstance();\r\n        firestore = FirebaseFirestore.getInstance();\r\n        locationView = findViewById(R.id.location);\r\n        createdBy = findViewById(R.id.createdBy);\r\n        timeCreated = findViewById(R.id.timeCreated);\r\n        titleView =findViewById(R.id.titleView);\r\n        descriptionView  =findViewById(R.id.descriptionView);\r\n        points = findViewById(R.id.points);\r\n        backButton = findViewById(R.id.backButton);\r\n        userImage = findViewById(R.id.userImage);\r\n        bookmarkButton = findViewById(R.id.saveBookmark);\r\n        noOfComments = findViewById(R.id.noOfComments);\r\n        sendCommentButton = findViewById(R.id.sendCommentButton);\r\n        commentText = findViewById(R.id.commentText);\r\n        likeButton = findViewById(R.id.likeButton);\r\n        dislikeButton = findViewById(R.id.dislikeButton);\r\n        commentRecyclerView = findViewById(R.id.commentRecyclerView);\r\n        toolbartitle = findViewById(R.id.toolbartitle);\r\n\r\n        likeButton.setOnClickListener(this);\r\n        dislikeButton.setOnClickListener(this);\r\n        backButton.setOnClickListener(this);\r\n        bookmarkButton.setOnClickListener(this);\r\n        sendCommentButton.setOnClickListener(this);\r\n\r\n        if (postId!=null){\r\n            loadPost();\r\n            loadComments();\r\n        }\r\n        ifDocExists();\r\n        ifBookmarkExists();\r\n    }\r\n\r\n    private void ifDocExists() {\r\n        firestore.collection(\"Posts\").document(postId)\r\n                .collection(\"LikedBy\").document(auth.getCurrentUser().getUid())\r\n                .addSnapshotListener(new EventListener<DocumentSnapshot>() {\r\n                    @Override\r\n                    public void onEvent(@Nullable DocumentSnapshot value, @Nullable FirebaseFirestoreException error) {\r\n                        if (value.exists()) {\r\n\r\n                            DrawableCompat.setTint(likeButton.getDrawable(), ContextCompat.getColor(getApplicationContext(), R.color.selectediconcolor));\r\n                            DrawableCompat.setTint(dislikeButton.getDrawable(), ContextCompat.getColor(getApplicationContext(),R.color.postAction));\r\n                            isliked = true;\r\n\r\n                        }\r\n                    }\r\n                });\r\n        firestore.collection(\"Posts\").document(postId)\r\n                .collection(\"DislikedBy\").document(auth.getCurrentUser().getUid())\r\n                .addSnapshotListener(new EventListener<DocumentSnapshot>() {\r\n                    @Override\r\n                    public void onEvent(@Nullable DocumentSnapshot value, @Nullable FirebaseFirestoreException error) {\r\n                        if (value.exists()) {\r\n                            DrawableCompat.setTint(dislikeButton.getDrawable(), ContextCompat.getColor(getApplicationContext(), R.color.selectediconcolor));\r\n                            DrawableCompat.setTint(likeButton.getDrawable(), ContextCompat.getColor(getApplicationContext(),R.color.postAction));\r\n                            isdisliked = true;\r\n                        }\r\n                    }\r\n                });\r\n\r\n    }\r\n\r\n    private void loadComments() {\r\n        commentModelList = new ArrayList<>();\r\n        firestore.collection(\"Posts\").document(postId).collection(\"Comments\")\r\n                .addSnapshotListener(new EventListener<QuerySnapshot>() {\r\n                    @Override\r\n                    public void onEvent(@Nullable QuerySnapshot value, @Nullable FirebaseFirestoreException error) {\r\n                        if (error!=null){\r\n                            error.printStackTrace();\r\n                        }\r\n                        else{\r\n                            commentModelList.clear();\r\n                            for (QueryDocumentSnapshot snapshot:value){\r\n                                commentModelList.add(\r\n                                        new CommentModel(snapshot.getString(\"user id\")\r\n                                        ,snapshot.getString(\"comment\")\r\n                                        ,snapshot.getLong(\"time of comment\").longValue(),\r\n                                        snapshot.getLong(\"total likes\").intValue(),\r\n                                                snapshot.getId())\r\n                                );\r\n\r\n\r\n                            }adapterComment.notifyDataSetChanged();\r\n                        }\r\n                    }\r\n                });\r\n        adapterComment= new RecyclerAdapterComment(getApplicationContext(),commentModelList,postId);\r\n        commentRecyclerView.setAdapter(adapterComment);\r\n\r\n\r\n\r\n    }\r\n\r\n    public void loadPost(){\r\n        DocumentReference documentReference = firestore.collection(\"Posts\").document(postId);\r\n        documentReference.addSnapshotListener(new EventListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onEvent(@Nullable DocumentSnapshot value, @Nullable FirebaseFirestoreException error) {\r\n                if (error!=null){\r\n                    error.printStackTrace();\r\n                }\r\n                else {\r\n                    location =  value.getString(\"location\");\r\n                    String[] arr = location.split(\", \",0);\r\n                    String cityFilename = arr[0] + \", \" + arr[arr.length - 1];\r\n                    locationView.setText(cityFilename);\r\n                    toolbartitle.setText(cityFilename);\r\n\r\n\r\n                    Calendar calendar = Calendar.getInstance();\r\n                    calendar.setTime(new Date());\r\n                    SimpleDateFormat sdf = new SimpleDateFormat(\"hh:mm\");\r\n                    sdf.setTimeZone(TimeZone.getDefault());\r\n                    timestamp = value.getLong(\"timeStamp\").longValue();\r\n                    dateAsText = sdf.format(new Date(timestamp).getTime());\r\n                    timeCreated.setText(dateAsText);\r\n\r\n\r\n                    title = value.getString(\"title\");\r\n                    titleView.setText(title);\r\n\r\n\r\n                    description = value.getString(\"description\");\r\n                    descriptionView.setText(description);\r\n\r\n\r\n                    likes = value.getLong(\"likes\").intValue();\r\n                    dislikes = value.getLong(\"dislikes\").intValue();\r\n\r\n                    intpoints = likes-dislikes;\r\n                    points.setText(Integer.toString(intpoints)+\" Votes\");\r\n\r\n                    totalComments = value.getLong(\"total comments\").intValue();\r\n                    noOfComments.setText(Integer.toString(totalComments) +\" Comments\");\r\n\r\n\r\n\r\n                    username = value.getString(\"createdBy\");\r\n                    FirebaseFirestore.getInstance().collection(\"Users\")\r\n                            .document(username).addSnapshotListener(new EventListener<DocumentSnapshot>() {\r\n                        @Override\r\n                        public void onEvent(@Nullable DocumentSnapshot value, @Nullable FirebaseFirestoreException error) {\r\n                            if (error!=null){\r\n                                Log.e(\"error\",error.getMessage());\r\n                            }\r\n                            else {\r\n                                createdBy.setText(value.getString(\"Display Name\"));\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n        Log.d(\"no of comment\",Integer.toString(totalComments));\r\n\r\n        firestore.collection(\"Users\").document(auth.getCurrentUser().getUid()).addSnapshotListener(new EventListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onEvent(@Nullable DocumentSnapshot value, @Nullable FirebaseFirestoreException error) {\r\n                if (error!=null){\r\n                    error.printStackTrace();\r\n                }\r\n                else{\r\n                    Glide.with(getApplicationContext()).load(value.getString(\"Image Uri\")).into(userImage);\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n    private void ifBookmarkExists() {\r\n        firestore.collection(\"Users\").document(auth.getCurrentUser().getUid())\r\n                .collection(\"Bookmarks\").document(postId)\r\n                .addSnapshotListener(new EventListener<DocumentSnapshot>() {\r\n                    @Override\r\n                    public void onEvent(@Nullable DocumentSnapshot value, @Nullable FirebaseFirestoreException error) {\r\n                        if (value.exists()) {\r\n\r\n                            bookmarkButton.setImageResource(R.drawable.ic_baseline_bookmark_24);\r\n                            isbookmarked = true;\r\n\r\n                        }else {\r\n                            bookmarkButton.setImageResource(R.drawable.ic_baseline_bookmark_border_24);\r\n                            isbookmarked=false;\r\n                        }\r\n                    }\r\n                });\r\n\r\n    }\r\n\r\n    public void bookmarking(){\r\n        if(isbookmarked==false){\r\n            DocumentReference documentReference = firestore.collection(\"Users\").document(auth.getCurrentUser().getUid())\r\n                    .collection(\"Bookmarks\").document(postId);\r\n            DocumentReference postDocRef = firestore.collection(\"Posts\").document(postId);\r\n            Map map = new HashMap();\r\n            map.put(\"post reference\",postDocRef);\r\n            documentReference.set(map).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                @Override\r\n                public void onSuccess(Void aVoid) {\r\n                    Log.d(\"successful\",\"successful\");\r\n                    Toast.makeText(PostInnerPage.this, \"Bookmarked\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            }).addOnFailureListener(new OnFailureListener() {\r\n                @Override\r\n                public void onFailure(@NonNull Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n            });\r\n\r\n//            DrawableCompat.setTint(bookmarkButton.getDrawable(), ContextCompat.getColor(getApplicationContext(),R.color.colorwhite));\r\n            bookmarkButton.setImageResource(R.drawable.ic_baseline_bookmark_24);\r\n            isbookmarked=true;\r\n        }else{\r\n             firestore.collection(\"Users\").document(auth.getCurrentUser().getUid())\r\n                    .collection(\"Bookmarks\").document(postId).delete()\r\n                    .addOnCompleteListener(new OnCompleteListener<Void>() {\r\n                     @Override\r\n                     public void onComplete(@NonNull Task<Void> task) {\r\n                         if(task.isSuccessful()){\r\n                             Log.d(TAG, \"onComplete: \" + \"bookmarked\");\r\n                             Toast.makeText(PostInnerPage.this, \"Bookmark Removed\", Toast.LENGTH_SHORT).show();\r\n                         }\r\n\r\n                     }\r\n                 });\r\n\r\n            bookmarkButton.setImageResource(R.drawable.ic_baseline_bookmark_border_24);\r\n            isbookmarked=false;\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View view) {\r\n        switch (view.getId()){\r\n            case R.id.backButton:\r\n                try {\r\n                    if (toactivity!=null){\r\n                        backtowhichactivity();\r\n                    }\r\n                }catch (Exception e){\r\n                    e.printStackTrace();\r\n                }\r\n\r\n                break;\r\n            case R.id.saveBookmark:\r\n                bookmarking();\r\n                break;\r\n            case R.id.likeButton:\r\n                like();\r\n                break;\r\n            case R.id.dislikeButton:\r\n                dislike();\r\n                Log.d(TAG, \"onClick: \");\r\n                break;\r\n            case R.id.sendCommentButton:\r\n                storingcomment();\r\n\r\n\r\n        }\r\n    }\r\n\r\n    private void storingcomment() {\r\n        if (!commentText.getText().toString().isEmpty()){\r\n            totalComments++;\r\n            DocumentReference commentDocRef = firestore.collection(\"Posts\").document(postId)\r\n                    .collection(\"Comments\").document(\"comment\"+Integer.toString(totalComments));\r\n\r\n            Map commentmap = new HashMap();\r\n            commentmap.put(\"user id\",auth.getCurrentUser().getUid());\r\n            commentmap.put(\"comment\",commentText.getText().toString());\r\n            commentmap.put(\"time of comment\",System.currentTimeMillis());\r\n            commentmap.put(\"total likes\",0);\r\n\r\n            commentDocRef.set(commentmap).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                @Override\r\n                public void onSuccess(Void aVoid) {\r\n                    Log.d(\"msg\",\"comment added\");\r\n                    firestore.collection(\"Posts\").document(postId).update(\"total comments\",totalComments);\r\n                    commentText.setText(null);\r\n\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    private void like() {\r\n        if (isliked==false){\r\n            if (isdisliked==true){\r\n                firestore.collection(\"Posts\").document(postId)\r\n                        .collection(\"DislikedBy\").document(auth.getCurrentUser().getUid()).delete();\r\n                dislikes--;\r\n                isdisliked = false;\r\n            }\r\n\r\n\r\n            CollectionReference collectionReference = firestore.collection(\"Posts\").document(postId)\r\n                    .collection(\"LikedBy\");\r\n            Map map1 = new HashMap();\r\n            map1.put(\"ref\", firestore.collection(\"Users\").document(auth.getCurrentUser().getUid()));\r\n            collectionReference.document(auth.getCurrentUser().getUid()).set(map1).addOnCompleteListener(new OnCompleteListener<Void>() {\r\n                @Override\r\n                public void onComplete(@NonNull Task<Void> task) {\r\n                    if (task.isSuccessful()) {\r\n                        Log.d(TAG, \"onComplete: \" + \"liked\");\r\n//                    Drawable d = getResources().getDrawable(R.drawable.up_arrow_icon);\r\n//                    d.setColorFilter( 0xffff0000, PorterDuff.Mode.MULTIPLY );\r\n                        DrawableCompat.setTint(likeButton.getDrawable(), ContextCompat.getColor(getApplicationContext(), R.color.selectediconcolor));\r\n                        DrawableCompat.setTint(dislikeButton.getDrawable(), ContextCompat.getColor(getApplicationContext(), R.color.postAction));\r\n\r\n                    }\r\n                }\r\n            });\r\n            isliked = true;\r\n            likes++;\r\n\r\n        }\r\n        else {\r\n            firestore.collection(\"Posts\").document(postId)\r\n                    .collection(\"LikedBy\").document(auth.getCurrentUser().getUid()).delete();\r\n            DrawableCompat.setTint(likeButton.getDrawable(), ContextCompat.getColor(getApplicationContext(), R.color.postAction));\r\n            isliked = false;\r\n            likes--;\r\n        }\r\n        Map likedislike = new HashMap();\r\n        likedislike.put(\"likes\",likes);\r\n        likedislike.put(\"dislikes\",dislikes);\r\n        firestore.collection(\"Posts\").document(postId).update(likedislike).addOnSuccessListener(new OnSuccessListener() {\r\n            @Override\r\n            public void onSuccess(Object o) {\r\n                Log.d(\"like dislike updated\",\"yes\");\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    private void dislike() {\r\n\r\n        if (isdisliked == false){\r\n            if (isliked == true){\r\n                firestore.collection(\"Posts\").document(postId)\r\n                        .collection(\"LikedBy\").document(auth.getCurrentUser().getUid()).delete();\r\n                likes--;\r\n                isliked = false;\r\n            }\r\n\r\n\r\n            CollectionReference collectionReference = firestore.collection(\"Posts\").document(postId)\r\n                    .collection(\"DislikedBy\");\r\n            Map map1 = new HashMap();\r\n            map1.put(\"ref\",firestore.collection(\"Users\").document(auth.getCurrentUser().getUid()));\r\n            collectionReference.document(auth.getCurrentUser().getUid()).set(map1).addOnCompleteListener(new OnCompleteListener<Void>() {\r\n                @Override\r\n                public void onComplete(@NonNull Task<Void> task) {\r\n                    if (task.isSuccessful()) {\r\n                        Log.d(TAG, \"onComplete: \" + \"liked\");\r\n                        DrawableCompat.setTint(dislikeButton.getDrawable(), ContextCompat.getColor(getApplicationContext(), R.color.selectediconcolor));\r\n                        DrawableCompat.setTint(likeButton.getDrawable(), ContextCompat.getColor(getApplicationContext(),R.color.postAction));\r\n\r\n                    }\r\n                }\r\n            });\r\n            isdisliked = true;\r\n            dislikes++;\r\n\r\n        }\r\n        else {\r\n            firestore.collection(\"Posts\").document(postId)\r\n                    .collection(\"DislikedBy\").document(auth.getCurrentUser().getUid()).delete();\r\n            DrawableCompat.setTint(dislikeButton.getDrawable(), ContextCompat.getColor(getApplicationContext(), R.color.postAction));\r\n            isdisliked = false;\r\n            dislikes--;\r\n        }\r\n        Map likedislike = new HashMap();\r\n        likedislike.put(\"likes\",likes);\r\n        likedislike.put(\"dislikes\",dislikes);\r\n        firestore.collection(\"Posts\").document(postId).update(likedislike).addOnSuccessListener(new OnSuccessListener() {\r\n            @Override\r\n            public void onSuccess(Object o) {\r\n                Log.d(\"like dislike updated\",\"yes\");\r\n            }\r\n        });\r\n    }\r\n\r\n    public void backtowhichactivity(){\r\n        Intent in = null;\r\n        \r\n        \r\n        switch (toactivity){\r\n            case \"city fragment\":\r\n               in = new Intent(this, HomeActivity.class);\r\n                in.putExtra(\"which Activity\",\"from Add new city\");\r\n                break;\r\n            case \"city inner page\":\r\n                in = new Intent(this, CityInnerPage.class);\r\n                in.putExtra(\"cityId\",location);\r\n                break;\r\n            case \"bookmark page\":\r\n                new Intent(this, BookmarkPage.class);\r\n                break;\r\n            case \"my post page\":\r\n                new Intent(this, myPost.class);\r\n                break;\r\n            case \"see more post page\":\r\n                new Intent(this, SeemorePosts.class);\r\n                break;\r\n            default:\r\n                in = new Intent(this, HomeActivity.class);\r\n                in.putExtra(\"which Activity\",\"from Add new city\");\r\n                break;\r\n        }\r\n\r\n        finish();\r\n        startActivity(in);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/bucketlist/PostInnerPage.java	(revision f57ef0fed87e42e91ed84a74df2a3c98f0485153)
+++ app/src/main/java/com/example/bucketlist/PostInnerPage.java	(date 1604744830742)
@@ -9,6 +9,7 @@
 import android.graphics.drawable.Drawable;
 import android.os.Bundle;
 import android.util.Log;
+import android.view.MenuItem;
 import android.view.View;
 import android.view.WindowManager;
 import android.widget.EditText;
@@ -53,7 +54,7 @@
 
 import de.hdodenhof.circleimageview.CircleImageView;
 
-public class PostInnerPage extends AppCompatActivity implements View.OnClickListener {
+public class PostInnerPage extends AppCompatActivity implements View.OnClickListener, Toolbar.OnMenuItemClickListener {
     private static final String TAG = "Post Inner Page";
     String myUid,postId;
     String location,username,title,description;
@@ -91,7 +92,6 @@
         setContentView(R.layout.post_inner_page_activity);
 
         toolbar = findViewById(R.id.toolBar);
-        setSupportActionBar(toolbar);
 
         toactivity = getIntent().getStringExtra("to activity");
         postId = getIntent().getStringExtra("postId");
@@ -134,6 +134,8 @@
         }
         ifDocExists();
         ifBookmarkExists();
+
+        toolbar.setOnMenuItemClickListener(this);
     }
 
     private void ifDocExists() {
@@ -256,8 +258,16 @@
                         }
                     });
 
+                 if (auth.getCurrentUser().getUid().equals(username)){
+                     toolbar.inflateMenu(R.menu.menu_post_mine);
+                 }
+                 else{
+                     toolbar.inflateMenu(R.menu.menu_post_other);
+                 }
+
                 }
             }
+
         });
 
 
@@ -527,4 +537,32 @@
         finish();
         startActivity(in);
     }
+
+    @Override
+    public boolean onMenuItemClick(MenuItem item) {
+        switch (item.getItemId()){
+            case R.id.edit:
+
+                break;
+            case R.id.report:
+                Toast.makeText(this, "Reported", Toast.LENGTH_SHORT).show();
+                break;
+            case R.id.delete:
+                firestore.collection("Posts").document(postId)
+                        .delete().addOnSuccessListener(new OnSuccessListener<Void>() {
+                    @Override
+                    public void onSuccess(Void aVoid) {
+                        Toast.makeText(PostInnerPage.this, "succesful", Toast.LENGTH_SHORT).show();
+                    }
+                }).addOnFailureListener(new OnFailureListener() {
+                    @Override
+                    public void onFailure(@NonNull Exception e) {
+
+                    }
+                });
+                break;
+
+        }
+        return false;
+    }
 }
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_30-10-2020_16_42__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_30-10-2020_16_42__Default_Changelist_.xml	(revision f57ef0fed87e42e91ed84a74df2a3c98f0485153)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_30-10-2020_16_42__Default_Changelist_.xml	(revision f57ef0fed87e42e91ed84a74df2a3c98f0485153)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_30-10-2020_16_42_[Default_Changelist]" date="1604056355216" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_30-10-2020_16_42_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 30-10-2020 16:42 [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_30-10-2020_16_42_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_30-10-2020_16_42_[Default_Changelist]/shelved.patch	(revision f57ef0fed87e42e91ed84a74df2a3c98f0485153)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_30-10-2020_16_42_[Default_Changelist]/shelved.patch	(revision f57ef0fed87e42e91ed84a74df2a3c98f0485153)
@@ -1,178 +0,0 @@
-Index: app/src/main/res/layout/activity_row.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:maxHeight=\"180dp\"\r\n    android:minHeight=\"170dp\"\r\n    android:layout_marginBottom=\"15dp\"\r\n    android:layout_marginTop=\"25dp\">\r\n\r\n    <androidx.cardview.widget.CardView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_centerVertical=\"true\"\r\n        android:clickable=\"true\"\r\n        app:cardBackgroundColor=\"@null\"\r\n        app:cardCornerRadius=\"30dp\">\r\n\r\n        <RelativeLayout\r\n            android:layout_width=\"55dp\"\r\n            android:layout_height=\"172dp\"\r\n            android:background=\"@color/lightgray\">\r\n\r\n            <ImageView\r\n                android:layout_width=\"30dp\"\r\n                android:layout_height=\"30dp\"\r\n                android:layout_marginLeft=\"10dp\"\r\n                android:layout_marginTop=\"30dp\"\r\n                android:src=\"@drawable/like\">\r\n\r\n            </ImageView>\r\n\r\n            <TextView\r\n                android:id=\"@+id/total\"\r\n                android:layout_width=\"30dp\"\r\n                android:layout_height=\"20dp\"\r\n                android:layout_marginLeft=\"10dp\"\r\n                android:layout_marginTop=\"70dp\"\r\n                android:text=\"2K+\"\r\n                android:textSize=\"15dp\"\r\n                android:gravity=\"center\"/>\r\n            <ImageView\r\n                android:layout_width=\"30dp\"\r\n                android:layout_height=\"30dp\"\r\n                android:layout_marginLeft=\"10dp\"\r\n                android:layout_marginTop=\"100dp\"\r\n                android:src=\"@drawable/dislike\">\r\n\r\n            </ImageView>\r\n\r\n        </RelativeLayout>\r\n\r\n        <RelativeLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"25dp\"\r\n            android:layout_marginLeft=\"55dp\"\r\n            android:layout_marginTop=\"5dp\">\r\n\r\n\r\n            <TextView\r\n                android:id=\"@+id/city_row\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"25dp\"\r\n                android:textSize=\"15dp\"\r\n                android:text=\"London .\"\r\n                android:layout_marginLeft=\"10dp\"\r\n                android:gravity=\"center\"\r\n                android:fontFamily=\"@font/nunito_semibold\"/>\r\n\r\n            <TextView\r\n                android:id=\"@+id/posted_by\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"25dp\"\r\n                android:text=\"Posted by Taniya\"\r\n                android:textSize=\"15dp\"\r\n                android:layout_marginLeft=\"70dp\"\r\n                android:gravity=\"center\"\r\n                android:fontFamily=\"@font/roboto_italic\"/>\r\n            <TextView\r\n                android:id=\"@+id/time\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"25dp\"\r\n                android:text=\"11:11\"\r\n                android:textSize=\"15dp\"\r\n                android:layout_marginLeft=\"300dp\"\r\n                android:gravity=\"center\"/>\r\n\r\n        </RelativeLayout>\r\n\r\n        <RelativeLayout\r\n            android:layout_width=\"330dp\"\r\n            android:layout_height=\"100dp\"\r\n            android:layout_marginLeft=\"55dp\"\r\n            android:layout_marginTop=\"35dp\">\r\n\r\n\r\n            <TextView\r\n                android:id=\"@+id/activityDescription\"\r\n                android:layout_width=\"329dp\"\r\n                android:layout_height=\"100dp\"\r\n                android:text=\"If you just came in relationship,the best place for your date in Delhi will be Hauz Khas.\"\r\n                android:textSize=\"20dp\"\r\n                android:paddingLeft=\"10dp\"\r\n                android:textColor=\"@color/blackcolor\"/>\r\n\r\n        </RelativeLayout>\r\n\r\n        <RelativeLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"30dp\"\r\n            android:layout_marginLeft=\"55dp\"\r\n            android:layout_marginTop=\"138dp\">\r\n\r\n            <TextView\r\n                android:id=\"@+id/comments\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"100 comments\"\r\n                android:layout_marginTop=\"10dp\"\r\n                android:layout_marginLeft=\"5dp\"/>\r\n        </RelativeLayout>\r\n\r\n\r\n    </androidx.cardview.widget.CardView>\r\n\r\n\r\n</RelativeLayout>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/layout/activity_row.xml	(revision bdd58bc220e40a55d991ddcc940cc2a71e5701a1)
-+++ app/src/main/res/layout/activity_row.xml	(date 1604050280695)
-@@ -62,7 +62,7 @@
-                 android:layout_width="wrap_content"
-                 android:layout_height="25dp"
-                 android:textSize="15dp"
--                android:text="London ."
-+                android:text="London . "
-                 android:layout_marginLeft="10dp"
-                 android:gravity="center"
-                 android:fontFamily="@font/nunito_semibold"/>
-@@ -73,7 +73,7 @@
-                 android:layout_height="25dp"
-                 android:text="Posted by Taniya"
-                 android:textSize="15dp"
--                android:layout_marginLeft="70dp"
-+                android:layout_marginLeft="75dp"
-                 android:gravity="center"
-                 android:fontFamily="@font/roboto_italic"/>
-             <TextView
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_22-10-2020_21_17__Default_Changelist_.xml
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_22-10-2020_21_17__Default_Changelist_.xml	(revision bdd58bc220e40a55d991ddcc940cc2a71e5701a1)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_22-10-2020_21_17__Default_Changelist_.xml	(revision bdd58bc220e40a55d991ddcc940cc2a71e5701a1)
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_22-10-2020_21_17_[Default_Changelist]" date="1603381722098" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_22-10-2020_21_17_[Default_Changelist]/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 22-10-2020 21:17 [Default Changelist]" />
--</changelist>
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_23-10-2020_13_11__Default_Changelist_.xml
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_23-10-2020_13_11__Default_Changelist_.xml	(revision bdd58bc220e40a55d991ddcc940cc2a71e5701a1)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_23-10-2020_13_11__Default_Changelist_.xml	(revision bdd58bc220e40a55d991ddcc940cc2a71e5701a1)
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_23-10-2020_13_11_[Default_Changelist]" date="1603438899043" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_23-10-2020_13_11_[Default_Changelist]/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 23-10-2020 13:11 [Default Changelist]" />
--</changelist>
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_22-10-2020_21_17_[Default_Changelist]/shelved.patch
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_22-10-2020_21_17_[Default_Changelist]/shelved.patch	(revision bdd58bc220e40a55d991ddcc940cc2a71e5701a1)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_22-10-2020_21_17_[Default_Changelist]/shelved.patch	(revision bdd58bc220e40a55d991ddcc940cc2a71e5701a1)
-@@ -1,17 +0,0 @@
--Index: app/src/main/java/com/example/bucketlist/AddNewCity.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.example.bucketlist;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.text.Editable;\r\nimport android.text.TextWatcher;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.AutoCompleteTextView;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.RelativeLayout;\r\nimport android.widget.Toast;\r\n\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.JsonArrayRequest;\r\nimport com.android.volley.toolbox.JsonObjectRequest;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.example.bucketlist.adapters.RecyclerAdapterWallpaper;\r\nimport com.example.bucketlist.fragments.homePageFragment.CityFragment;\r\nimport com.example.bucketlist.fragments.homePageFragment.ProfileFragment;\r\nimport com.example.bucketlist.layout.userLayout.DetailProfile;\r\nimport com.example.bucketlist.model.WallpaperModel;\r\nimport com.example.bucketlist.utils.CityListHelper;\r\nimport com.google.android.material.snackbar.BaseTransientBottomBar;\r\nimport com.google.android.material.snackbar.Snackbar;\r\nimport com.google.gson.JsonArray;\r\nimport com.ismaeldivita.chipnavigation.ChipNavigationBar;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\n\r\nimport okhttp3.OkHttpClient;\r\n\r\npublic class AddNewCity extends AppCompatActivity implements View.OnClickListener {\r\n\r\n    Button cancelButton , createButton;\r\n    AutoCompleteTextView addCityEditText;\r\n    RecyclerView recyclerView;\r\n    String City;\r\n    RecyclerAdapterWallpaper recyclerAdapterWallpaper;\r\n    List<WallpaperModel> wallpaperModelList;\r\n    RelativeLayout smallRelativeLayout;\r\n\r\n    ArrayAdapter<String> arrayAdapter;\r\n\r\n    private static List<String> city= new ArrayList<>();\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.add_new_city);\r\n\r\n        cancelButton = findViewById(R.id.cancelButton);\r\n        createButton = findViewById(R.id.createButton);\r\n        addCityEditText = findViewById(R.id.addCityEditText);\r\n        smallRelativeLayout = findViewById(R.id.smallRelativeLayout);\r\n        recyclerView = findViewById(R.id.recyclerView);\r\n        wallpaperModelList = new ArrayList<>();\r\n        recyclerAdapterWallpaper = new RecyclerAdapterWallpaper(this,wallpaperModelList);\r\n\r\n        recyclerView.setAdapter(recyclerAdapterWallpaper);\r\n        cancelButton.setOnClickListener(this);\r\n        smallRelativeLayout.setOnClickListener(this);\r\n\r\n    }\r\n\r\n    private void loadCityList(String search) {\r\n        CityListHelper cityListHelper = new CityListHelper(this,search) {\r\n\r\n            @Override\r\n            protected void onCompleteListener(List<CityQuery> queryResult) {\r\n                Log.d(\"Listener \", \"onCompleteListener: \" + queryResult.toString());\r\n                List<String> list = new ArrayList<>();\r\n                for (CityQuery query: queryResult\r\n                     ) {\r\n                    list.add(query.getDisplayName());\r\n                }\r\n                city = list;\r\n                arrayAdapter = new ArrayAdapter<>(getApplicationContext(),\r\n                        android.R.layout.simple_list_item_1,city);\r\n                addCityEditText.setAdapter(arrayAdapter);\r\n                arrayAdapter.notifyDataSetChanged();\r\n            }\r\n        };\r\n    }\r\n\r\n    public void  fetchWallpaper(){\r\n\r\n        String url = \"https://api.unsplash.com/search/photos?query=\"+City+\"&client_id=oxQo4AhPw8db0J1kqs9urtDCYtgGm4Kpil2aA8pNyU8&per_page=15\";\r\n\r\n\r\n        JsonObjectRequest objectRequest = new JsonObjectRequest(Request.Method.GET, url,\r\n                null, new Response.Listener<JSONObject>() {\r\n            @Override\r\n            public void onResponse(JSONObject response) {\r\n\r\n                try {\r\n                    Log.d(\"response\", response.toString());\r\n\r\n                    JSONArray array = response.getJSONArray(\"results\");\r\n\r\n                    for (int i =0;i<array.length();i++){\r\n                        JSONObject object = array.getJSONObject(i);\r\n                        String id = object.getString(\"id\");\r\n                        Log.d(\"photo id\", id);\r\n\r\n                        JSONObject objectUrls = object.getJSONObject(\"urls\");\r\n                        String rawImageUrl = objectUrls.getString(\"raw\");\r\n\r\n                        WallpaperModel wallpaperModel = new WallpaperModel(id,rawImageUrl);\r\n                        wallpaperModelList.add(wallpaperModel);\r\n\r\n                    }\r\n                    recyclerAdapterWallpaper.notifyDataSetChanged();\r\n\r\n\r\n                }catch (JSONException e){\r\n                    e.printStackTrace();\r\n                    Toast.makeText(AddNewCity.this,\" Error!!\"+e.toString(),Toast.LENGTH_LONG).show();\r\n                    Log.d(\"error\",e.getMessage());\r\n                }\r\n            }\r\n        }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n                error.printStackTrace();\r\n                Log.d(\"error12\",error.toString());\r\n            }\r\n        });\r\n\r\n        RequestQueue queue = VolleySingleton.getInstance(this).getRequestQueue();\r\n        queue.add(objectRequest);\r\n//        VolleySingleton.getInstance().addToRequestQueue(objectRequest);;\r\n        wallpaperModelList.clear();\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View v) {\r\n        if (v.getId() == R.id.cancelButton){\r\n\r\n\r\n        }\r\n        if (v.getId() == R.id.smallRelativeLayout){\r\n            if(!addCityEditText.getText().toString().isEmpty()){\r\n                City = addCityEditText.getText().toString();\r\n                fetchWallpaper();\r\n              recyclerView.setVisibility(View.VISIBLE);\r\n            }\r\n            else{\r\n                recyclerView.setVisibility(View.GONE);\r\n                Snackbar.make(v,\"Field is empty.\",Snackbar.LENGTH_LONG).show();\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n        addCityEditText.addTextChangedListener(tf);\r\n    }\r\n\r\n    TextWatcher tf = new TextWatcher() {\r\n        @Override\r\n        public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n        }\r\n\r\n        @Override\r\n        public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n        }\r\n\r\n        @Override\r\n        public void afterTextChanged(Editable s) {\r\n            Log.d(\"Ok\", \"afterTextChanged: \" + s.toString());\r\n            loadCityList(s.toString());\r\n        }\r\n    };\r\n}
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/java/com/example/bucketlist/AddNewCity.java	(revision 7629220d87edbf09bd9c683e59d2eeb7d3751540)
--+++ app/src/main/java/com/example/bucketlist/AddNewCity.java	(date 1603381642716)
--@@ -76,7 +76,6 @@
--         recyclerView = findViewById(R.id.recyclerView);
--         wallpaperModelList = new ArrayList<>();
--         recyclerAdapterWallpaper = new RecyclerAdapterWallpaper(this,wallpaperModelList);
---
--         recyclerView.setAdapter(recyclerAdapterWallpaper);
--         cancelButton.setOnClickListener(this);
--         smallRelativeLayout.setOnClickListener(this);
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_23-10-2020_13_11_[Default_Changelist]/shelved.patch
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_23-10-2020_13_11_[Default_Changelist]/shelved.patch	(revision bdd58bc220e40a55d991ddcc940cc2a71e5701a1)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_23-10-2020_13_11_[Default_Changelist]/shelved.patch	(revision bdd58bc220e40a55d991ddcc940cc2a71e5701a1)
-@@ -1,102 +0,0 @@
--Index: app/src/main/res/layout/fragment_city.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:theme=\"@style/CustomTheme\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\r\n    <com.google.android.material.appbar.AppBarLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"450dp\">\r\n        <com.google.android.material.appbar.CollapsingToolbarLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            app:contentScrim=\"@color/colorwhite\"\r\n            android:fitsSystemWindows=\"true\"\r\n            app:layout_scrollFlags=\"scroll|snap|exitUntilCollapsed\">\r\n\r\n            <com.denzcoskun.imageslider.ImageSlider\r\n                android:id=\"@+id/slider\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"450dp\"\r\n                app:auto_cycle=\"false\"\r\n                app:corner_radius=\"5\"\r\n                app:delay=\"0\"\r\n                android:background=\"@color/greenishcolor\"\r\n                app:period=\"1000\"\r\n                android:scrollIndicators=\"none\"\r\n                app:placeholder=\"@drawable/grey_bg\"\r\n                app:error_image=\"@drawable/grey_bg\"\r\n                >\r\n            </com.denzcoskun.imageslider.ImageSlider>\r\n\r\n            <androidx.appcompat.widget.Toolbar\r\n                android:id=\"@+id/toolBar\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"?attr/actionBarSize\"\r\n                android:elevation=\"20dp\"\r\n                android:layout_marginTop=\"24dp\"\r\n                app:layout_collapseMode=\"pin\"\r\n                android:theme=\"@style/ThemeOverlay.MaterialComponents.Light\"\r\n                app:popupTheme=\"@style/ThemeOverlay.MaterialComponents.Light\">\r\n\r\n            </androidx.appcompat.widget.Toolbar>\r\n        </com.google.android.material.appbar.CollapsingToolbarLayout>\r\n    </com.google.android.material.appbar.AppBarLayout>\r\n\r\n    <androidx.core.widget.NestedScrollView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        app:layout_behavior=\"com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior\">\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"vertical\">\r\n\r\n            <TextView\r\n                android:id=\"@+id/textTrending\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"Trending\"\r\n                android:textSize=\"18dp\"\r\n                android:gravity=\"center|start\"\r\n                android:layout_marginTop=\"10dp\"\r\n                android:layout_marginHorizontal=\"16dp\"\r\n                android:fontFamily=\"@font/nunito_bold\"\r\n                android:paddingTop=\"5dp\"\r\n\r\n\r\n                android:textColor=\"#1B1B1B\"/>\r\n\r\n            <androidx.recyclerview.widget.RecyclerView\r\n                android:id=\"@+id/recycler_view\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_marginTop=\"3dp\"\r\n                android:layout_height=\"wrap_content\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/city\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_marginHorizontal=\"10dp\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"CREATE\"\r\n                android:textSize=\"30dp\"\r\n                android:textAlignment=\"textEnd\"/>\r\n\r\n            <TextView\r\n                android:id=\"@+id/activity\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_marginHorizontal=\"10dp\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"CREATE activity\"\r\n                android:textSize=\"30dp\"\r\n                android:layout_alignParentBottom=\"true\"\r\n                android:textAlignment=\"textStart\"/>\r\n\r\n<!--            <androidx.recyclerview.widget.RecyclerView-->\r\n<!--                android:layout_width=\"match_parent\"-->\r\n<!--                android:layout_height=\"1500dp\"-->\r\n<!--                android:background=\"@color/greenishcolor\"/>-->\r\n        </LinearLayout>\r\n\r\n    </androidx.core.widget.NestedScrollView>\r\n</androidx.coordinatorlayout.widget.CoordinatorLayout>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/res/layout/fragment_city.xml	(revision 83ea4c502e8655dafd19af5ee681f878b06a87c7)
--+++ app/src/main/res/layout/fragment_city.xml	(date 1603438740124)
--@@ -29,23 +29,31 @@
--                 >
--             </com.denzcoskun.imageslider.ImageSlider>
-- 
---            <androidx.appcompat.widget.Toolbar
---                android:id="@+id/toolBar"
---                android:layout_width="match_parent"
---                android:layout_height="?attr/actionBarSize"
---                android:elevation="20dp"
---                android:layout_marginTop="24dp"
---                app:layout_collapseMode="pin"
---                android:theme="@style/ThemeOverlay.MaterialComponents.Light"
---                app:popupTheme="@style/ThemeOverlay.MaterialComponents.Light">
--+
-- 
---            </androidx.appcompat.widget.Toolbar>
--+<!--            <androidx.appcompat.widget.Toolbar-->
--+<!--                android:id="@+id/toolBar"-->
--+<!--                android:layout_width="match_parent"-->
--+<!--                android:layout_height="?attr/actionBarSize"-->
--+<!--                android:elevation="20dp"-->
--+<!--                android:layout_marginTop="24dp"-->
--+<!--                app:layout_collapseMode="pin"-->
--+<!--                android:theme="@style/ThemeOverlay.MaterialComponents.Light"-->
--+<!--                app:popupTheme="@style/ThemeOverlay.MaterialComponents.Light">-->
--+
--+<!--               -->
--+
--+<!--            </androidx.appcompat.widget.Toolbar>-->
--         </com.google.android.material.appbar.CollapsingToolbarLayout>
--+
--     </com.google.android.material.appbar.AppBarLayout>
-- 
--+
--+
--     <androidx.core.widget.NestedScrollView
--         android:layout_width="match_parent"
--         android:layout_height="match_parent"
--+
--         app:layout_behavior="com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior">
-- 
--         <LinearLayout
--@@ -71,8 +79,8 @@
--             <androidx.recyclerview.widget.RecyclerView
--                 android:id="@+id/recycler_view"
--                 android:layout_width="match_parent"
---                android:layout_marginTop="3dp"
---                android:layout_height="wrap_content" />
--+                android:layout_height="wrap_content"
--+                android:layout_marginTop="3dp" />
-- 
--             <TextView
--                 android:id="@+id/city"
--@@ -100,4 +108,16 @@
--         </LinearLayout>
-- 
--     </androidx.core.widget.NestedScrollView>
--+
--+    <SearchView
--+        android:layout_width="match_parent"
--+        android:layout_height="wrap_content"
--+        android:background="@color/white"
--+        android:layout_gravity="top|right"
--+        android:layout_marginTop="34dp"
--+
--+
--+        android:elevation="2dp"
--+        app:layout_collapseMode="pin"
--+        android:layout_marginHorizontal="10dp" />
-- </androidx.coordinatorlayout.widget.CoordinatorLayout>
--\ No newline at end of file
--Index: app/src/main/java/com/example/bucketlist/AddNewPost.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.example.bucketlist;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.google.android.material.chip.ChipGroup;\r\nimport com.google.android.material.snackbar.Snackbar;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\n\r\npublic class AddNewPost extends AppCompatActivity implements View.OnClickListener {\r\n\r\n    FirebaseAuth mAuth;\r\n    FirebaseUser user;\r\n    ImageView backButton;\r\n    TextView postButton;\r\n    EditText titleText, descriptionText, locationText;\r\n    ChipGroup chipGroup;\r\n\r\n    FirebaseFirestore firestore;\r\n    boolean empty = false;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.add_new_post);\r\n\r\n\r\n\r\n        initialize();\r\n\r\n\r\n\r\n    }\r\n\r\n    private void initialize(){\r\n\r\n        mAuth = FirebaseAuth.getInstance();\r\n        user = mAuth.getCurrentUser();\r\n        firestore = FirebaseFirestore.getInstance();\r\n\r\n        backButton = findViewById(R.id.backButton);\r\n        postButton = findViewById(R.id.postButton);\r\n        titleText = findViewById(R.id.titleText);\r\n        descriptionText = findViewById(R.id.descriptionText);\r\n        locationText = findViewById(R.id.location);\r\n        chipGroup = findViewById(R.id.chipGroup);\r\n\r\n        backButton.setOnClickListener(this);\r\n        postButton.setOnClickListener(this);\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View view) {\r\n        if (view.getId() == R.id.backButton){\r\n            Toast.makeText(getApplicationContext(), \"back\", Toast.LENGTH_SHORT).show();\r\n            Intent i = new Intent(getApplicationContext(),HomeActivity.class);\r\n            startActivity(i);\r\n\r\n        }\r\n        else if (view.getId() == R.id.postButton){\r\n            if (checkEmptyField(empty)){\r\n                Snackbar.make(view,\"Please fill all the fields\",Snackbar.LENGTH_LONG).show();\r\n            }\r\n            else{\r\n                Toast.makeText(getApplicationContext(), \"Post shared\", Toast.LENGTH_SHORT).show();\r\n                Intent i = new Intent(getApplicationContext(),HomeActivity.class);\r\n                startActivity(i);\r\n            }\r\n        }\r\n    }\r\n\r\n    private boolean checkEmptyField(boolean empty ){\r\n        if (titleText.getText().toString().isEmpty()||\r\n                descriptionText.getText().toString().isEmpty()||\r\n                locationText.getText().toString().isEmpty()){\r\n\r\n            empty = true;\r\n\r\n        }\r\n        return empty;\r\n    }\r\n\r\n\r\n\r\n\r\n}
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/java/com/example/bucketlist/AddNewPost.java	(revision 83ea4c502e8655dafd19af5ee681f878b06a87c7)
--+++ app/src/main/java/com/example/bucketlist/AddNewPost.java	(date 1603433214069)
--@@ -34,12 +34,8 @@
--         super.onCreate(savedInstanceState);
--         setContentView(R.layout.add_new_post);
-- 
---
---
--         initialize();
-- 
---
---
--     }
-- 
--     private void initialize(){
-diff --git .idea/shelf/Uncommitted_changes_before_Update_at_27-10-2020_15_23__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_27-10-2020_15_23__Default_Changelist_.xml
-diff --git .idea/shelf/Uncommitted_changes_before_Update_at_27-10-2020_15_23__Default_Changelist_1.xml .idea/shelf/Uncommitted_changes_before_Update_at_27-10-2020_15_23__Default_Changelist_1.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_05-11-2020_11_43__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_05-11-2020_11_43__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_03-11-2020_16_48__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_03-11-2020_16_48__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_03-11-2020_17_09__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_03-11-2020_17_09__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_02-11-2020_16_12__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_02-11-2020_16_12__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_03-11-2020_17_37__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_03-11-2020_17_37__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_04-11-2020_13_48__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_04-11-2020_13_48__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_27-10-2020_15_23__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_27-10-2020_15_23__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_05-11-2020_09_57__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_05-11-2020_09_57__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_01-11-2020_16_11__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_01-11-2020_16_11__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_03-11-2020_18_02__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_03-11-2020_18_02__Default_Changelist_.xml
